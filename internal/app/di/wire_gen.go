// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/lecterkn/goat_backend/internal/app/database"
	"github.com/lecterkn/goat_backend/internal/app/handler"
	"github.com/lecterkn/goat_backend/internal/app/repository/mysql"
	"github.com/lecterkn/goat_backend/internal/app/repository/redis"
	"github.com/lecterkn/goat_backend/internal/app/usecase"
)

// Injectors from wire.go:

func InitializeHandlerSet() *HandlerSet {
	db := database.GetMySQLConnection()
	userRepository := mysql.NewUserRepositoryImpl(db)
	client := database.GetRedisClient()
	tokenRepository := redis.NewTokenRepositoryImpl(client)
	authorizationUsecase := usecase.NewAuthorizationUsecase(userRepository, tokenRepository)
	authorizationHandler := handler.NewAuthorizationHandler(authorizationUsecase)
	categoryRepository := mysql.NewCategoryRepositoryImpl(db)
	categoryUsecase := usecase.NewCategoryUsecase(userRepository, categoryRepository)
	categoryHandler := handler.NewCategoryHandler(categoryUsecase)
	storyRepository := mysql.NewStoryRepositoryImpl(db)
	storyUsecase := usecase.NewStoryUsecase(userRepository, storyRepository, categoryRepository)
	storyHandler := handler.NewStoryHandler(storyUsecase)
	diHandlerSet := &HandlerSet{
		AuthorizationHandler: authorizationHandler,
		CategoryHandler:      categoryHandler,
		StoryHandler:         storyHandler,
	}
	return diHandlerSet
}

// wire.go:

var databaseSet = wire.NewSet(database.GetMySQLConnection, database.GetRedisClient)

var repositorySet = wire.NewSet(mysql.NewUserRepositoryImpl, mysql.NewCategoryRepositoryImpl, mysql.NewStoryRepositoryImpl, redis.NewTokenRepositoryImpl)

var usecaseSet = wire.NewSet(usecase.NewAuthorizationUsecase, usecase.NewCategoryUsecase, usecase.NewStoryUsecase)

var handlerSet = wire.NewSet(handler.NewAuthorizationHandler, handler.NewCategoryHandler, handler.NewStoryHandler)

type HandlerSet struct {
	AuthorizationHandler *handler.AuthorizationHandler
	CategoryHandler      *handler.CategoryHandler
	StoryHandler         *handler.StoryHandler
}
