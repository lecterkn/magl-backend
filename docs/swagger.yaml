basePath: /api
definitions:
  request.MyListAddRequest:
    properties:
      score:
        type: integer
      storyId:
        type: string
    required:
    - score
    - storyId
    type: object
  request.MyListUpdateRequest:
    properties:
      score:
        type: integer
      storyId:
        type: string
    required:
    - score
    - storyId
    type: object
  request.UserSigninRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserSignupRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.UserUpdatePermissionRequest:
    properties:
      permission:
        type: integer
    required:
    - permission
    type: object
  response.CategoryListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/response.CategoryResponse'
        type: array
    required:
    - list
    type: object
  response.CategoryResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    required:
    - description
    - id
    - name
    type: object
  response.MyListListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/response.MyListResponse'
        type: array
    required:
    - list
    type: object
  response.MyListResponse:
    properties:
      categoryId:
        type: string
      categoryName:
        type: string
      description:
        type: string
      episode:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      score:
        type: integer
      title:
        type: string
    required:
    - categoryId
    - categoryName
    - description
    - episode
    - id
    - imageUrl
    - score
    - title
    type: object
  response.RefreshResponse:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: string
    type: object
  response.StoryListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/response.StoryResponse'
        type: array
    required:
    - list
    type: object
  response.StoryResponse:
    properties:
      categoryId:
        type: string
      categoryName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      episode:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    required:
    - categoryId
    - categoryName
    - createdAt
    - description
    - episode
    - id
    - imageUrl
    - title
    - updatedAt
    type: object
  response.UserListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/response.UserResponse'
        type: array
    required:
    - list
    type: object
  response.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: integer
      roleName:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - email
    - id
    - name
    - role
    - roleName
    - updatedAt
    type: object
  response.UserSigninResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
host: localhost:8993
info:
  contact: {}
  description: MyAnimeGameList API Server
  title: MyAnimeGameList
  version: "1.0"
paths:
  /categories:
    get:
      description: カテゴリを一覧取得
      parameters:
      - description: 検索キーワード
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CategoryListResponse'
      summary: GetCategories
      tags:
      - category
    post:
      description: カテゴリを新規作成
      parameters:
      - description: 画像ファイル
        in: formData
        name: image
        type: file
      - description: カテゴリ名
        in: formData
        name: name
        required: true
        type: string
      - description: カテゴリ概要
        in: formData
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: CreateCategory
      tags:
      - category
  /me:
    get:
      description: 自身のユーザー情報を取得する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      security:
      - BearerAuth: []
      summary: GetMe
      tags:
      - user
  /mylists:
    get:
      description: マイリストを取得
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MyListListResponse'
      security:
      - BearerAuth: []
      summary: GetMyList
      tags:
      - mylist
    patch:
      description: マイリストのストーリーを更新
      parameters:
      - description: マイリスト更新リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.MyListUpdateRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: UpdateMyList
      tags:
      - mylist
    post:
      description: マイリストにストーリーを追加
      parameters:
      - description: マイリスト追加リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.MyListAddRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: AddMyList
      tags:
      - mylist
  /mylists/{storyId}:
    delete:
      description: マイリストからストーリーを削除
      parameters:
      - description: ストーリーID
        in: path
        name: storyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: RemoveFromMyList
      tags:
      - mylist
  /refresh:
    post:
      description: アクセストークンをリフレッシュする
      parameters:
      - description: リフレッシュトークン
        in: header
        name: x-refresh-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RefreshResponse'
      summary: Refresh
      tags:
      - auth
  /signin:
    post:
      description: ユーザーのサインインを行う
      parameters:
      - description: ユーザーログインリクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserSigninRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserSigninResponse'
      summary: SignIn
      tags:
      - auth
  /signup:
    post:
      description: ユーザーのサインアップを行う
      parameters:
      - description: ユーザーログインリクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserSignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      security:
      - BearerAuth: []
      summary: SignUp
      tags:
      - auth
  /stories:
    get:
      description: カテゴリを一覧取得
      parameters:
      - description: 検索キーワード
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.StoryListResponse'
      summary: GetStories
      tags:
      - story
    post:
      description: ストーリーを新規作成
      parameters:
      - description: 画像ファイル
        in: formData
        name: image
        type: file
      - description: カテゴリID
        in: formData
        name: categoryId
        required: true
        type: string
      - description: ストーリータイトル
        in: formData
        name: title
        required: true
        type: string
      - description: ストーリー区分
        in: formData
        name: episode
        required: true
        type: string
      - description: ストーリー概要
        in: formData
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: CreateStory
      tags:
      - story
  /users:
    get:
      description: ユーザーを一覧取得する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserListResponse'
      security:
      - BearerAuth: []
      summary: GetUsers
      tags:
      - user
  /users/{userId}/permissions:
    patch:
      description: ユーザーを一覧取得する
      parameters:
      - description: 編集対象ユーザーID
        in: path
        name: userId
        required: true
        type: string
      - description: ユーザーログインリクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserListResponse'
      security:
      - BearerAuth: []
      summary: EditPermission
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
