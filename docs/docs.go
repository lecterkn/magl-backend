// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "カテゴリを一覧取得",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "GetCategories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "検索キーワード",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CategoryListResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "カテゴリを新規作成",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "CreateCategory",
                "parameters": [
                    {
                        "type": "file",
                        "description": "画像ファイル",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "カテゴリ名",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "カテゴリ概要",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "description": "ユーザーのサインインを行う",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "SignIn",
                "parameters": [
                    {
                        "description": "ユーザーログインリクエスト",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserSigninRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserSigninResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "ユーザーのサインアップを行う",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "ユーザーログインリクエスト",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserSignupResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.UserSigninRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UserSignupRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.CategoryListResponse": {
            "type": "object",
            "required": [
                "list"
            ],
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CategoryResponse"
                    }
                }
            }
        },
        "response.CategoryResponse": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.UserSigninResponse": {
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "response.UserSignupResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "email",
                "id",
                "name",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8993",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "MyAnimeGameList",
	Description:      "MyAnimeGameList API Server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
